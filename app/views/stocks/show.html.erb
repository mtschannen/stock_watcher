<!--<script language="javascript" type="text/javascript">setTimeout("location.reload();",10000);</script>-->
<script>
  function makeGraph(months){
    //removes previously loaded graph
    $('#graph_header').hide();
    $('#xAxisG').remove();
    $('#yAxisG').remove();
    $('.graphPoints').remove();
    $('#graphPath').remove();

    loading_icon(); //initiates loading animation
    var responseObj = $.getJSON('<%= params[:id] %>/update_graph?num_months=' + months).done(function() {
      stop_loading_icon(); //after data fetch, ends loading animation
      //creates graph tite
      
      if(months == 1000)
        $('#graph_header').html('All History');
      else
        $('#graph_header').html(months + ' - Month History');
      $('#graph_header').show();

      var data = responseObj.responseJSON;
      var current_data;
      var first_date;
      
      //check for the overflow variable
      if(data[data.length-1] == true){
        data.pop();
        alert("You requested more data than is available for this stock. Showing all history.");
        $('#graph_header').html('All History');
      }

      //parses JSON data into array
      for (var i = 0; i < data.length; i++){
        current_data = data[i][0];
        var pieces = current_data.split('-');
        if (i == 0){
          first_date = new Date(Number(pieces[0]), Number(pieces[1])-1, Number(pieces[2]));
        }
        var new_date = new Date(Number(pieces[0]), Number(pieces[1])-1, Number(pieces[2]));
        data[i][0] = new_date;
      }	
      
      var graph_min = 99999999999;
      var graph_max = 0;
      for(var i = 0; i < data.length; i++){
        if(data[i][1] < graph_min)
          graph_min = data[i][1];
      }
      
      for(var i = 0; i < data.length; i++){
        if(data[i][1] > graph_max)
          graph_max = data[i][1];
      }

      //sets upper boundary for graph
      var xOffset = 70;
      if(graph_max > 9999){
        xOffset = 100;
      }

      //sets graph specs
      var vis = d3.select("#visualisation"),
  	    WIDTH = 700,
  	    HEIGHT = 500,
  	    MARGINS = {
      	  top: 65,
          right: 20,
          bottom: 65,
          left: xOffset 
  	    };
      
      var valueLine = d3.svg.line()
        .x(function(d) { return xScale(d[0]); })
        .y(function(d) { return yScale(d[1]); });

      

      //builds axis and scales
      var scale_start_date = first_date;
      var scale_end_date = new Date();
      xScale = d3.time.scale().range([MARGINS.left, WIDTH - MARGINS.right]).domain([scale_start_date, scale_end_date]);
  		yScale = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([.9*graph_min, 1.1*graph_max]);
  		xAxis = d3.svg.axis().scale(xScale);
  		yAxis = d3.svg.axis().scale(yScale).orient("left").ticks(10, "$.2f");
      //draws tooltip
      var div = document.getElementById("tooltip");
      var g = document.getElementById("group");
      var text = document.getElementById("tooltip_text");
      var horiz_line = document.getElementById("tooltip_line_horiz");
      var vert_line = document.getElementById("tooltip_line_vert");
      //axis labels
      vis.append("svg:g").attr("transform", "translate(0," + (HEIGHT - MARGINS.bottom) + ")").attr("id", "xAxisG").call(xAxis).selectAll("text").attr("y", 5)
      .attr("x", 5).attr("transform", "rotate(45)").style("text-anchor", "start");
      //
      vis.append("svg:g").attr("transform", "translate(" + (MARGINS.left) + ",0)").attr("id", "yAxisG").call(yAxis);

      vis.append("path").attr("d", valueLine(data)).attr("id", "graphPath");
      //draw graph and tooltip
      vis.selectAll("scatter-dots").data(data).enter().append("svg:circle")
          .attr("class", "graphPoints")
          .attr("cx", function (d,i) { return xScale(d[0]); } )
          .attr("cy", function (d) { return yScale(d[1]); } )
          .attr("r", 4).attr("style", "opacity:0")
          //fades in tooltip on mouseover
          .on("mouseover", function(d) {    
              var xpos = d3.event.pageX;
              var ypos = d3.event.pageY;
              this.setAttribute("style", "opacity:.9;fill:red");
              g.setAttribute("style", "opacity: 1");    

              var price = d[1]
              //adjusts tooltip width to content
              
              
              //adds date to tooltip
              var month_index = d[0].getMonth();
              var year = d[0].getYear()+1900;
              var day = d[0].getDate();
              text.innerHTML = (month_index + 1) + "/" + day + "/" + year;
              document.getElementById("tooltip_text_price").innerHTML = "$" + price.toFixed(2); 
              //adds tooltip tracking lines
              var self = d3.select(this);
              horiz_line.setAttribute('x2', (self.attr('cx')));
              horiz_line.setAttribute('y2', (self.attr("cy")));
              horiz_line.setAttribute('x1', xOffset);
              horiz_line.setAttribute('y1', (self.attr('cy')));

              vert_line.setAttribute('x2', (self.attr('cx')));
              vert_line.setAttribute('y2', (self.attr("cy")));
              vert_line.setAttribute('x1', (self.attr('cx')));
              vert_line.setAttribute('y1', 435);
              })          
          //fades out tooltip
          .on("mouseout", function(d) {   
              g.setAttribute("style", "opacity: 0"); 
              this.setAttribute("style", "opacity:0");
          });
    });
	}

  var intervalID;
  
  function loading_icon() {
    var colors = ["#d9d9d9", "#bfbfbf", "#a6a6a6", "#8c8c8c", "#737373", "#595959", "#404040", "#262626"];
    var i = 100000000;
    $("#loading_circle1").show();
    $("#loading_circle2").show();
    $("#loading_circle3").show();
    $("#loading_circle4").show();
    $("#loading_circle5").show();
    $("#loading_circle6").show();
    $("#loading_circle7").show();
    $("#loading_circle8").show();
    //loops changing shades, creating a spinning effect with the circles
    intervalID = setInterval(function(){
      $("#loading_circle1").attr("fill", colors[i%8]);
      $("#loading_circle2").attr("fill", colors[(i+1)%8]);
      $("#loading_circle3").attr("fill", colors[(i+2)%8]);
      $("#loading_circle4").attr("fill", colors[(i+3)%8]);
      $("#loading_circle5").attr("fill", colors[(i+4)%8]);
      $("#loading_circle6").attr("fill", colors[(i+5)%8]);
      $("#loading_circle7").attr("fill", colors[(i+6)%8]);
      $("#loading_circle8").attr("fill", colors[(i+7)%8]);
      i--;
    }, 100);//interval in milleseconds sets speed of animation
  }

  function stop_loading_icon() {
    clearInterval(intervalID);
    $("#loading_circle1").hide();
    $("#loading_circle2").hide();
    $("#loading_circle3").hide();
    $("#loading_circle4").hide();
    $("#loading_circle5").hide();
    $("#loading_circle6").hide();
    $("#loading_circle7").hide();
    $("#loading_circle8").hide();
  }
	
  function loadBasicInfo() {
    console.log("Function is working")
    $("#basic_info").load( "test" );
  }

  $('body').ready(makeGraph(3)); //automatically builds a 3-month graph on page load

  function updateOverviewInfo() {
    overviewLoadingIcon();
    var overviewResponseObj = $.getJSON('<%= params[:id] %>/update_info', function () {
      console.log("success");
    }).done(function() {
      stopOverviewLoadingIcon();
      overview_data = overviewResponseObj.responseJSON[0].table;
      $('#overview_last_trade_price').html('$' + Number(overview_data.last_trade_price).toFixed(2));
      $('#overview_opening_price').html('Opening Price: $' + Number(overview_data.open).toFixed(2));
      $('#overview_high_price').html('Highest Price: $' + Number(overview_data.high).toFixed(2));
      $('#overview_low_price').html('Lowest Price: $' + Number(overview_data.low).toFixed(2));
      //picks arrow (up or down) and changes text color to reflect an up or down price
      if(Number(overview_data.change) >= 0){
        $('#overview_change').html('▲' + Number(overview_data.change).toFixed(2) + " (" + overview_data.change_in_percent + ")");
        $('#overview_change').attr('class', 'greenPriceChange');
      } else {
        $('#overview_change').html('▼' + Number(overview_data.change).toFixed(2) + " (" + overview_data.change_in_percent + ")");
        $('#overview_change').attr('class', 'redPriceChange');
      }
    });
  }

  var overview_intervalID;
  //constructs loading animation for overview info
  function overviewLoadingIcon() {
    $('#overview_div_container').show();
    $('#overview_ticker').hide();

    var colors = ["#bfbfbf", "#737373", "#262626"];
    var i = 10000000000;
    //cycles shades to produce movement, similar to graph animation
    overview_intervalID = setInterval(function(){
      $('#overview_load_div1').attr("style", "background-color:" + colors[i%3]);
      $('#overview_load_div2').attr("style", "background-color:" + colors[(i+1)%3]);
      $('#overview_load_div3').attr("style", "background-color:" + colors[(i+2)%3]);
      i--;
    }, 150);
  }

  function stopOverviewLoadingIcon(){
    clearInterval(overview_intervalID);
    $('#overview_div_container').hide();
    $('#overview_ticker').show();
  }
  //updates overview info at 15 second intervals
  var overview_updater;
  function liveUpdateOverview(){
    overview_updater = setInterval(function(){
      console.log("test");
      updateOverviewInfo();
    }, 15000);
  }

  function stopOverviewUpdate() {
    console.log("stopped updating");
    clearInterval(overview_updater);
  }

  $('body').ready(updateOverviewInfo);
  $('body').ready(liveUpdateOverview);
  //$('body').unload(stopOverviewUpdate);
  $(document).ready(function(){
    $(window).on('unload', stopOverviewUpdate);
  });
  
</script>

<div class='center_text'>
  <h1 id="show_header"><%= @stock.company_name %></h1>
  <% if !(session[:current_user_firstname].nil?) %>
    <%= link_to "Stop Tracking", stock_path(@stock), method: :delete, data: { confirm: "Are you sure you want to delete #{@stock.ticker_symbol} from your dashboard?" }, class: 'btn btn-danger' %>
  <% end %>
<br>
<div class="row" id="show_page_content">
  <div class="col-md-4" id="left-show">
    <div id="overview_div" class="overview_wrapper">
      <div id="overview_div_container">  
        <div class="load_div" id="overview_load_div1"></div>
        <div class="load_div" id="overview_load_div2"></div>
        <div class="load_div" id="overview_load_div3"></div>
      </div>
    <h1 id="overview_ticker" class='center_text'><%= @stock.ticker_symbol %></h1>
    <h2 id="overview_last_trade_price"></h2>
    <h3 id="overview_change"></h3>
    <h3 id="overview_opening_price"></h3>
    <h3 id="overview_high_price"></h3>
    <h3 id="overview_low_price"></h3>
    
  </div>
    <div class="logo_div_overview" style='background-image: url(<%= @stock.stock_logo.url(:thumb) %>);'>
  </div>
    <div class="overview_wrapper">
      <h3>Graph Time Span</h3>
        <div class="dropdown show pull-center">
          <button id="dropdown_button" class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Select Time Frame ▼
          </button>

          <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
            <div class="graph_timeframes" onclick="makeGraph(3)">  
              3-Months
            </div>  
            <div class="graph_timeframes" onclick="makeGraph(6)">  
              6-Months
            </div>
            <div class="graph_timeframes" onclick="makeGraph(12)">    
              1-Year
            </div>
            <div class="graph_timeframes" onclick="makeGraph(24)">    
              2-Years
            </div>
            <div class="graph_timeframes" onclick="makeGraph(60)">    
              5-Years
            </div>
            <div class="graph_timeframes" onclick="makeGraph(1000)">    
              Max
            </div>
          </div>
        </div>
    </div>
  </div>
  <div class="col-md-8">
    <div id="graph_container" class="overview_wrapper">
        <h2 class='center_text' id="graph_header"></h2>
      <svg id="visualisation" width="700" height="500">
        <g id="group" style="opacity: 0">
          <rect id="tooltip" x="330" y="60" rx="5" ry="5" width="65" height="45" style="fill:lightgray;stroke:black"></rect>
          <line id="tooltip_line_horiz" x1="370" y1="105" stroke-dasharray="5,5" style="stroke:rgb(150,150,150);stroke-width:2" />
          <line id="tooltip_line_vert" x1="370" y1="105" stroke-dasharray="5,5" style="stroke:rgb(150,150,150);stroke-width:2" />
          <text id="tooltip_text" style="fill:black" transform="translate(335,78)"></text>
          <text id="tooltip_text_price" style="fill:black" transform="translate(335,98)"></text>
        </g>
        <g id="loading_graphic">
          <circle cx=350 cy=220 r=10 id="loading_circle1"></circle>
          <circle cx=390 cy=220 r=10 id="loading_circle2"></circle>
          <circle cx=418 cy=248 r=10 id="loading_circle3"></circle>
          <circle cx=418 cy=288 r=10 id="loading_circle4"></circle>
          <circle cx=390 cy=316 r=10 id="loading_circle5"></circle>
          <circle cx=350 cy=316 r=10 id="loading_circle6"></circle>
          <circle cx=322 cy=288 r=10 id="loading_circle7"></circle>
          <circle cx=322 cy=248 r=10 id="loading_circle8"></circle>
        </g>
      </svg>
    </div>
  </div>
  <%= @data[0].dividend_yield %>
</div>

